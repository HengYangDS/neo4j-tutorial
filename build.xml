<?xml version="1.0"?>
<project name="neo4j-tutorial" default="run.koans" basedir=".">
  <property name="settings.dir" location="settings"/>
  <import file="${settings.dir}/install-ant-eclipse.xml"/>
  <import file="${settings.dir}/path.xml"/>
  <import file="${settings.dir}/test.xml"/>
  <import file="${settings.dir}/koan.xml"/>

  <condition property="isWindows">
    <os family="windows"/>
  </condition>

  <condition property="isUnix">
    <os family="unix"/>
  </condition>

  <target name="-download.check">
    <available property="neo4j.already.downloaded" file="${neo4j.download.dir}/${neo4j.unix.distribution}"/>
    <available property="neo4j.already.downloaded" file="${neo4j.download.dir}/${neo4j.windows.distribution}"/>
    <available property="jars.already.downloaded" file="${additional.jars.dir}"/>
  </target>

  <target name="-make.download.dirs">
    <mkdir dir="${neo4j.download.dir}"/>
    <mkdir dir="${additional.jars.dir}"/>
  </target>

  <target name="-download.additional.jars" unless="jars.already.downloaded">
    <get src="http://repo.maven.apache.org/maven2/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar"                                                    dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/com/sun/jersey/jersey-bundle/1.9.1/jersey-bundle-1.9.1.jar"                                           dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/apache/maven/reporting/maven-reporting-api/2.0.6/maven-reporting-api-2.0.6.jar"                   dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/apache/maven/doxia/doxia-sink-api/1.0-alpha-7/doxia-sink-api-1.0-alpha-7.jar"                     dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-interactivity-api/1.0-alpha-4/plexus-interactivity-api-1.0-alpha-4.jar"    dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/commons-cli/commons-cli/1.0/commons-cli-1.0.jar"                                                      dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/sonatype/plexus/plexus-build-api/0.0.4/plexus-build-api-0.0.4.jar"                                dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/junit/junit/3.8.1/junit-3.8.1.jar"                                                                    dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-filtering/1.1/maven-filtering-1.1.jar"                                  dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-interpolation/1.13/plexus-interpolation-1.13.jar"                          dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar"                                        dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-compiler-manager/1.9.1/plexus-compiler-manager-1.9.1.jar"                  dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-compiler-javac/1.9.1/plexus-compiler-javac-1.9.1.jar"                      dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-compiler-api/1.9.1/plexus-compiler-api-1.9.1.jar"                          dest="${additional.jars.dir}/"/>
    <get src="http://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-utils/3.0/plexus-utils-3.0.jar"                                            dest="${additional.jars.dir}/"/>
    <get src="http://repo1.maven.org/maven2/junit/junit/4.4/junit-4.4.jar" dest="${additional.jars.dir}/"/>
    <get src="http://repo1.maven.org/maven2/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar" dest="${additional.jars.dir}/"/>
  </target>

  <target name="-download.and.unzip.neo4j.windows" if="isWindows" depends="-make.download.dirs"
          unless="neo4j.already.downloaded">
    <get dest="${neo4j.download.dir}" src="http://dist.neo4j.org/${neo4j.windows.distribution}"/>
    <unzip src="${neo4j.download.dir}/${neo4j.windows.distribution}" dest="${neo4j.download.dir}/"/>
  </target>

  <target name="-download.and.uncompress.neo4j.unix" if="isUnix" depends="-make.download.dirs"
          unless="neo4j.already.downloaded">
    <get dest="${neo4j.download.dir}" src="http://dist.neo4j.org/${neo4j.unix.distribution}"/>
    <gunzip src="${neo4j.download.dir}/${neo4j.unix.distribution}" dest="${neo4j.download.dir}/"/>
    <untar src="${neo4j.download.dir}/neo4j-community-${neo4j.version}-unix.tar" dest="${neo4j.download.dir}"/>
  </target>

  <target name="download.neo4j.and.test.dependencies"
          depends="-download.check, -download.and.unzip.neo4j.windows, -download.and.uncompress.neo4j.unix, -download.additional.jars"
          description="Downloads the most appropriate Neo4j version for the current platform">
    <copy todir="${lib.dir}">
	    <fileset dir="${neo4j.install.dir}/lib">
	      <include name="**/*.jar"/>
	    </fileset>
	    <fileset dir="${neo4j.install.dir}/system/lib">
	      <include name="**/*.jar"/>
	    </fileset>
	    <fileset dir="${additional.jars.dir}">
	      <include name="**/*.jar"/>
	    </fileset>        
	</copy>
  </target>

  <target name="clean" description="Cleans the build, but leaves binary dependencies">
    <delete dir="target"/>
    <delete dir="build"/>
    <delete dir="out"/>
  </target>

  <target name="really.clean"
          description="Cleans the build, removes the cached database, and removes the Neo4j binaries (but not the download)."
          depends="clean">
    <delete dir="${neo4j.install.dir}"/>
    <delete dir="${cached.db.dir}"/>
  </target>

  <target name="nuke"
          description="Removes everything, except sources. Use with caution, you'll have to download Neo4j again."
          depends="really.clean">
    <delete dir="${download.dir}"/>
  </target>

  <target name="compile" description="Compile koans" depends="download.neo4j.and.test.dependencies">
    <mkdir dir="${main.target}"/>
    <javac srcdir="${main.src}" destdir="${main.target}" classpathref="path.libs" source="1.7"/>

    <tstamp>
      <format property="build.timestamp" pattern="yyyy-MM-dd HH:mm:ss"/>
    </tstamp>
  </target>

  <target name="compile.tests" description="Compile unit test classes" depends="compile">
    <mkdir dir="${test.target}"/>
    <javac srcdir="${test.src}" destdir="${test.target}" classpathref="path.testing" debug="true" target="1.7"/>
  </target>

  <target name="test" depends="compile, compile.tests">
    <fileset id="unittest.source.files" dir="${test.src}">
      <include name="**/*Test*.java"/>
    </fileset>
    <run_junit_tests testclasspath="path.testing" testfileset="unittest.source.files" outputdir="${test.reports}"/>
    <fail if="tests.failed.or.errored" message="Build failed due to Unit test failures or errors"/>
  </target>

  <target name="compile.koans" description="Compile koans">
    <mkdir dir="${koan.target}"/>
    <javac srcdir="${koan.src}" destdir="${koan.target}" classpathref="path.koan" debug="true" target="1.7"/>
  </target>

  <target name="run.koans"
          depends="test, compile.koans, run.koan01, run.koan02, run.koan03, run.koan04, run.koan05, run.koan06, run.koan07, run.koan08, run.koan09, run.koan10, run.koan11, run.koan12, run.koan13"/>

  <target name="run.koan01" depends="test, compile.koans">
    <koan number="01"/>
  </target>

  <target name="run.koan02" depends="test, compile.koans">
    <koan number="02"/>
  </target>

  <target name="run.koan03" depends="test, compile.koans">
    <koan number="03"/>
  </target>

  <target name="run.koan04" depends="test, compile.koans">
    <koan number="04"/>
  </target>

  <target name="run.koan05" depends="test, compile.koans">
    <koan number="05"/>
  </target>

  <target name="run.koan06" depends="test, compile.koans">
    <koan number="06"/>
  </target>

  <target name="run.koan07" depends="test, compile.koans">
    <koan number="07"/>
  </target>

  <target name="run.koan08" depends="test, compile.koans">
    <koan number="08"/>
  </target>

  <target name="run.koan09" depends="test, compile.koans">
    <koan number="09"/>
  </target>

  <target name="run.koan10" depends="test, compile.koans">
    <koan number="10"/>
  </target>

  <target name="run.koan11" depends="test, compile.koans">
    <koan number="11"/>
  </target>

  <target name="run.koan12" depends="test, compile.koans">
    <koan number="12"/>
  </target>

  <target name="run.koan13" depends="test, compile.koans">
    <koan number="13"/>
  </target>

  <target name="generate.eclipse.project" depends="-install.ant-eclipse">
    <mkdir dir="${main.target}"/>
    <mkdir dir="${test.target}"/>
    <mkdir dir="${koan.target}"/>
    <eclipse mode="java">
      <settings>
        <jdtcore compilercompliance="6.0"/>
      </settings>
      <project name="neo4j-tutorial"/>
      <classpath>
        <library pathref="path.libs"/>
        <source path="${main.src}"/>
        <source path="${test.src}"/>
        <source path="${koan.src}"/>
        <source path="${koan.resource}"/>
        <output path="${target}"/>
      </classpath>
    </eclipse>
  </target>

  <target name="remove.snippets" description="Remove the snippets">
    <replaceregexp match="// SNIPPET_START(.+?)// SNIPPET_END" replace="" flags="gis">
      <fileset dir="${koan.src}" includes="**/*.java"/>
    </replaceregexp>
  </target>

</project>